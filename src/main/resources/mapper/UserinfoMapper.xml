<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.UserinfoMapper" >
  <resultMap id="BaseResultMap" type="entity.Userinfo" >
    <id column="U_ID" property="uId" jdbcType="DECIMAL" />
    <result column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="REGISTER_TIME" property="registerTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    U_ID, USERNAME, PASSWORD, EMAIL, REGISTER_TIME
  </sql>

  <select id="selectByName" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include> from USERINFO where USERNAME = #{username,jdbcType=VARCHAR}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from USERINFO
    where U_ID = #{uId,jdbcType=DECIMAL}
  </select>

  <!--查询验证码就是根据用户名,就是自己的定义的String类型-->
  <select id="selectEmailByUsername" resultType="java.lang.String">
    select email from USERINFO where username=#{username,jdbcType=VARCHAR}
  </select>

  <!--就是用户根据用户名查询id-->
  <select id="selectUidByUsername" resultType="java.lang.Integer">
  select u_id from USERINFO where username=#{username,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from USERINFO
    where U_ID = #{uId,jdbcType=DECIMAL}
  </delete>

  <insert id="insert" parameterType="entity.Userinfo" >

  /*j就是插入自己序列号主键的序列号.uId是这个xml里面的实体类的,数据库里面的u_Id.  seq_user_info_id及时创建主键序列*/
    <selectKey keyProperty="uId" order="BEFORE" resultType="int">
      select seq_user_info_id.nextval from dual
    </selectKey>

    insert into USERINFO (U_ID, USERNAME, PASSWORD,
      EMAIL, REGISTER_TIME)
    values (#{uId,jdbcType=DECIMAL}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{registerTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entity.Userinfo" >
    insert into USERINFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uId != null" >
        U_ID,
      </if>
      <if test="username != null" >
        USERNAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="registerTime != null" >
        REGISTER_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uId != null" >
        #{uId,jdbcType=DECIMAL},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Userinfo" >
    update USERINFO
    <set >
      <if test="username != null" >
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        REGISTER_TIME = #{registerTime,jdbcType=VARCHAR},
      </if>
    </set>
    where U_ID = #{uId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Userinfo" >
    update USERINFO
    set USERNAME = #{username,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      REGISTER_TIME = #{registerTime,jdbcType=VARCHAR}
    where U_ID = #{uId,jdbcType=DECIMAL}
  </update>
</mapper>